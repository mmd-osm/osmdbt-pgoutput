---
Checks: '*,-altera-*,-boost-use-ranges,-bugprone-chained-comparison,-bugprone-easily-swappable-parameters,-cppcoreguidelines-avoid-c-arrays,-cppcoreguidelines-avoid-do-while,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-cppcoreguidelines-pro-type-vararg,-cppcoreguidelines-avoid-magic-numbers,-fuchsia-*,-google-runtime-references,-hicpp-avoid-c-arrays,-hicpp-no-array-decay,-hicpp-vararg,-llvm-header-guard,-llvmlibc-*,-misc-include-cleaner,-modernize-avoid-c-arrays,-modernize-use-trailing-return-type,-readability-identifier-length,-readability-implicit-bool-conversion,-readability-magic-numbers'

#
#  For a list of check options, see:
#  https://clang.llvm.org/extra/clang-tidy/checks/list.html
#
#  Disabled checks:
#
#  altera-*
#    Not applicable.
#
#  boost-use-ranges
#    No more dependency on boost than necessary.
#
#  bugprone-chained-comparison
#    Used extensively in tests.
#
#  bugprone-easily-swappable-parameters
#    Not always easy or sensible to avoid.
#
#  cppcoreguidelines-avoid-c-arrays
#  hicpp-avoid-c-arrays
#  modernize-avoid-c-arrays
#    Using std::array instead isn't always that great either.
#
#  cppcoreguidelines-avoid-do-while
#    Not wrong to avoid it if possible, but it does have its place.
#
#  cppcoreguidelines-pro-bounds-array-to-pointer-decay
#  hicpp-no-array-decay
#    Limited use and many false positives including for all asserts.
#
#  cppcoreguidelines-pro-bounds-pointer-arithmetic
#    This is a low-level library, it needs to do pointer arithmetic.
#
#  cppcoreguidelines-pro-type-vararg
#  hicpp-vararg
#    The libc has some of these functions.
#
#  cppcoreguidelines-avoid-magic-numbers
#  readability-magic-numbers
#    Too strict.
#
#  fuchsia-*
#    Much too strict.
#
#  google-runtime-references
#    This is just a matter of preference, and we can't change the interfaces
#    now anyways.
#
#  llvm-header-guard
#    Using #pragma once
#
#  llvmlibc-*
#    Not applicable.
#
#  misc-include-cleaner
#    Disabled for now because there are many, should probably be fixed (TODO).
#
#  modernize-use-trailing-return-type
#    We are not that modern.
#
#  readability-identifier-length
#    Some variables can have shorter names, that's okay.
#
#  readability-implicit-bool-conversion
#    I don't think this makes the code more readable.
#
WarningsAsErrors: '*,-clang-diagnostic-deprecated-declarations'
HeaderFilterRegex: '\/src\/'
CheckOptions:
    - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
      value: true
    - key: cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
      value: true
...
